import FreeCAD
import FreeCADGui
import Part

def conectar_objetos_en_grupo():
    doc = FreeCAD.ActiveDocument

    # Obtiene el objeto seleccionado
    selected_objects = FreeCADGui.Selection.getSelection()

    if not selected_objects:
        FreeCAD.Console.PrintError("No se ha seleccionado ningún objeto.\n")
        return

    # Verifica si el objeto seleccionado es un grupo
    if selected_objects[0].TypeId == 'App::DocumentObjectGroup':
        grupo = selected_objects[0]
    else:
        # Si no es un grupo, busca el grupo al que pertenece el objeto
        for obj in doc.Objects:
            if obj.TypeId == 'App::DocumentObjectGroup' and selected_objects[0] in obj.Group:
                grupo = obj
                break
        else:
            FreeCAD.Console.PrintError("El objeto seleccionado no pertenece a ningún grupo.\n")
            return

    FreeCAD.Console.PrintMessage(f"Grupo seleccionado: {grupo.Name}\n")

    # Obtener todos los objetos en el grupo que están numerados según el Label
    objetos_numerados = sorted(
        [obj for obj in grupo.Group if obj.Label.isdigit() or obj.Label.isalnum()],
        key=lambda x: int(x.Label) if x.Label.isdigit() else x.Label
    )

    # Conectar todos los objetos numerados con líneas
    for i in range(len(objetos_numerados) - 1):
        objeto1 = objetos_numerados[i]
        objeto2 = objetos_numerados[i + 1]
        puntos = [objeto1.Placement.Base, objeto2.Placement.Base]
        linea = Part.makePolygon(puntos)
        linea_obj = doc.addObject("Part::Feature", f'Conexion_{objeto1.Label}_{objeto2.Label}')
        linea_obj.Shape = linea

# Ejecuta la función para conectar objetos en el grupo seleccionado
conectar_objetos_en_grupo()

FreeCAD.ActiveDocument.recompute()
