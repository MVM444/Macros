# -*- coding: utf-8 -*-

import os
import sys
import importlib
import FreeCAD as App
import FreeCADGui as Gui


def ensure_path_and_load():
    base_dir = os.path.dirname(__file__)
    if base_dir not in sys.path:
        sys.path.append(base_dir)

    try:
        # Intentar quitar el workbench si ya existe para forzar reconstrucción
        try:
            if "ElectricCRWorkbench" in list(getattr(Gui, 'listWorkbenches')() or {}):
                getattr(Gui, 'removeWorkbench', lambda *a, **k: None)("ElectricCRWorkbench")
        except Exception:
            pass

        # Importar o recargar el módulo
        if 'ElectricCR.InitGui' in sys.modules:
            importlib.reload(sys.modules['ElectricCR.InitGui'])
        else:
            import ElectricCR.InitGui  # noqa: F401
        App.Console.PrintMessage("ElectricCR: Workbench (re)cargado desde Macros\\ElectricCR\n")

        # Activar Draft primero (asegura comandos) y luego ElectricCR
        if App.GuiUp:
            try:
                Gui.activateWorkbench("DraftWorkbench")
            except Exception:
                pass
            try:
                Gui.activateWorkbench("ElectricCRWorkbench")
                App.Console.PrintMessage("ElectricCR: Workbench activado\n")
            except Exception as act_err:
                App.Console.PrintError("ElectricCR: No se pudo activar el workbench: {}\n".format(act_err))
    except Exception as err:
        App.Console.PrintError("ElectricCR: Error cargando el workbench: {}\n".format(err))


ensure_path_and_load()
